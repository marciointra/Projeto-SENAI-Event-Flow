/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author wpass
 */
public class Cadastrar_Equipe extends javax.swing.JFrame {

    /**
     * Creates new form Cadastrar_Equipe
     */
     private void preencherComboBox() {
         
    String url = "jdbc:mysql://localhost:3306/EventFlow"; 
    String usuario = "root";  
    String senha = ""; 

    try (Connection conexao = DriverManager.getConnection(url, usuario, senha)) {
        
        String sql = "SELECT Nome FROM Funcionario ORDER BY Nome ASC";
        PreparedStatement stmt = conexao.prepareStatement(sql);
        ResultSet resultado = stmt.executeQuery();

        cccc.removeAllItems(); // Limpa os itens para evitar duplicação

        boolean encontrou = false;
        while (resultado.next()) {
            String nome = resultado.getString("Nome");
            cccc.addItem(nome);
            encontrou = true;
        }

        if (!encontrou) {
            System.out.println("Nenhum registro encontrado.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erro ao acessar o banco de dados: " + e.getMessage());
    }

    System.out.println("Método preencherComboBox finalizado.");
}
     
     
     
     
    private void preencherComboBox_Evento() {
         
    String url = "jdbc:mysql://localhost:3306/EventFlow"; 
    String usuario = "root";  
    String senha = "";
    
         try {
             Connection conexao = DriverManager.getConnection(url, usuario, senha);
             
             String sql = "SELECT TituloEvento FROM Evento ORDER BY TituloEvento DESC";
             PreparedStatement statement = conexao.prepareStatement(sql);
             ResultSet resultado = statement.executeQuery();
             
             cccc1.removeAllItems(); // limpar tudo o que tem registrado na combo box para evitar erros de duplicação
             boolean econtrar = false;
             
             while(resultado.next()){
                 String nome = resultado.getString("TituloEvento");
                 cccc1.addItem(nome); // adicionando itens na minha segunda combo box
                 econtrar = true;
             }
             
             if(!econtrar){
                 System.out.println("Nenhum registro encontrado");
             }       } catch (SQLException ex) {
             Logger.getLogger(Cadastrar_Equipe.class.getName()).log(Level.SEVERE, null, ex);
         }
     }
    
     
     
     
    public Cadastrar_Equipe() {
        initComponents();
        preencherComboBox();
        preencherComboBox_Evento();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jlbl_IMG_Evento = new javax.swing.JLabel();
        jlbl_IMG_Cadastrar = new javax.swing.JLabel();
        cccc1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cccc = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Confirmar");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, -1, 30));

        jButton1.setBackground(new java.awt.Color(135, 79, 255));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 110, 30));

        jlbl_IMG_Evento.setBackground(new java.awt.Color(135, 79, 255));
        jlbl_IMG_Evento.setFont(new java.awt.Font("Arial Black", 3, 36)); // NOI18N
        jlbl_IMG_Evento.setForeground(new java.awt.Color(135, 79, 255));
        jlbl_IMG_Evento.setText("EQUIPE");
        getContentPane().add(jlbl_IMG_Evento, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 180, 60));

        jlbl_IMG_Cadastrar.setBackground(new java.awt.Color(255, 255, 255));
        jlbl_IMG_Cadastrar.setFont(new java.awt.Font("Arial Black", 3, 36)); // NOI18N
        jlbl_IMG_Cadastrar.setForeground(new java.awt.Color(255, 255, 255));
        jlbl_IMG_Cadastrar.setText("CADASTRAR");
        getContentPane().add(jlbl_IMG_Cadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 270, 60));

        cccc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cccc1ActionPerformed(evt);
            }
        });
        getContentPane().add(cccc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 110, -1));

        jLabel3.setBackground(new java.awt.Color(160, 40, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(160, 40, 255));
        jLabel3.setText("Eventos");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, -1, -1));

        jLabel2.setBackground(new java.awt.Color(160, 40, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(160, 40, 255));
        jLabel2.setText("Funcionários");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, -1));

        cccc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccccActionPerformed(evt);
            }
        });
        getContentPane().add(cccc, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 110, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jpnl_fundo.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    private void ccccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccccActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ccccActionPerformed

    private void cccc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cccc1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cccc1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
try {
    // Obter o nome do funcionário e o título do evento selecionado
    String nomeDoFuncionario = (String) cccc.getSelectedItem();
    String TituloDeEvento = (String) cccc1.getSelectedItem();

    int idFuncionario = 0;
    int idEvento = 0;

    // Configuração da conexão com o banco de dados
    String url = "jdbc:mysql://localhost:3306/EventFlow";
    String usuario = "root";
    String senha = "";

    // Estabelecer a conexão
    Connection conexao = DriverManager.getConnection(url, usuario, senha);

    // Consultar o ID do funcionário selecionado
    String sqlFuncionario = "SELECT ID FROM Funcionario WHERE Nome = ?";
    PreparedStatement statementFuncionario = conexao.prepareStatement(sqlFuncionario);
    statementFuncionario.setString(1, nomeDoFuncionario);
    ResultSet resultadoFuncionario = statementFuncionario.executeQuery();

    // Obter o ID do funcionário
    if (resultadoFuncionario.next()) {
        idFuncionario = resultadoFuncionario.getInt("ID");
        System.out.println("ID do Funcionário: " + idFuncionario);  // Verificação
    } else {
        JOptionPane.showMessageDialog(null, "Funcionário não encontrado.");
        return;  // Se não encontrar, para o código aqui
    }

    // Fechar o ResultSet e o Statement do funcionário
    resultadoFuncionario.close();
    statementFuncionario.close();

    // Consultar o ID do evento selecionado
    String sqlEvento = "SELECT ID_Evento FROM Evento WHERE TituloEvento = ?";
    PreparedStatement statementEvento = conexao.prepareStatement(sqlEvento);
    statementEvento.setString(1, TituloDeEvento);
    ResultSet resultadoEvento = statementEvento.executeQuery();

    // Obter o ID do evento
    if (resultadoEvento.next()) {
        idEvento = resultadoEvento.getInt("ID_Evento");
        System.out.println("ID do Evento: " + idEvento);  // Verificação
    } else {
        JOptionPane.showMessageDialog(null, "Evento não encontrado.");
        return;  // Se não encontrar, para o código aqui
    }

    // Fechar o ResultSet e o Statement do evento
    resultadoEvento.close();
    statementEvento.close();

    // Inserção na tabela Equipe
    if (idFuncionario > 0 && idEvento > 0) {
        String sqlInsercao = "INSERT INTO Equipe (FuncionarioID, ID_Evento) VALUES (?, ?)";
        PreparedStatement stmtInsercao = conexao.prepareStatement(sqlInsercao);
        stmtInsercao.setInt(1, idFuncionario);
        stmtInsercao.setInt(2, idEvento);
        int linhasAfetadas = stmtInsercao.executeUpdate();
        if (linhasAfetadas > 0) {
            JOptionPane.showMessageDialog(null, "Relação entre funcionário e evento registrada com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null, "Erro ao tentar registrar a relação.");
        }
        stmtInsercao.close();
    } else {
        JOptionPane.showMessageDialog(null, "Funcionário registrado em equipe");
    }

    // Fechar a conexão
    conexao.close();

} catch (SQLException ex) {
    Logger.getLogger(Cadastrar_Equipe.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(null, "Erro ao acessar o banco de dados: " + ex.getMessage());
}

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastrar_Equipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastrar_Equipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastrar_Equipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastrar_Equipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cadastrar_Equipe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cccc;
    private javax.swing.JComboBox<String> cccc1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jlbl_IMG_Cadastrar;
    private javax.swing.JLabel jlbl_IMG_Evento;
    // End of variables declaration//GEN-END:variables
}
